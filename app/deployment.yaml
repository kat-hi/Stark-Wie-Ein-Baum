kind: Deployment
apiVersion: apps/v1
metadata:
  name: sweb-frontend
  namespace: kbrendel
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"sweb-frontend","namespace":"kbrendel"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"sweb-frontend"}},"strategy":null,"template":{"metadata":{"labels":{"app":"sweb-frontend"}},"spec":{"containers":[{"image":"registry.datexis.com/kbrendel/sweb-frontend:latest","name":"sweb-frontend","ports":[{"containerPort":3000,"name":"client-port"}]}],"imagePullSecrets":[{"name":"private-registry-auth"}]}}}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sweb-frontend
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sweb-frontend
    spec:
      containers:
        - name: sweb-frontend
          image: 'registry.datexis.com/kbrendel/sweb-frontend:latest'
          ports:
            - name: client-port
              containerPort: 3000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: private-registry-auth
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

